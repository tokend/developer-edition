user  nginx;
worker_processes 1;

error_log /dev/stdout info;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;


    log_format main      '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$gzip_ratio"';

    log_format download  '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"';

    client_header_timeout  3m;
    client_body_timeout    3m;
    send_timeout           3m;

    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;

    gzip on;
    gzip_min_length  1100;
    gzip_buffers     4 8k;
    gzip_types       text/plain;

    output_buffers   1 32k;
    postpone_output  1460;

    sendfile         on;
    tcp_nopush       on;
    tcp_nodelay      on;
    send_lowat       12000;

    keepalive_timeout  75 20;

    #lingering_time     30;
    #lingering_timeout  10;
    #reset_timedout_connection  on;
    access_log /dev/stdout;

    server {
        listen       80;
        server_name  localhost;

        set $cors_credentials 'true';
        set $cors_content_type '';
        set $cors_content_length '';

        if ($http_origin ~ '.+') {
            set $cors_credentials 'true';
        }

        if ($request_method = OPTIONS) {
            set $cors_content_type 'text/plain';
            set $cors_content_length '0';
        }

        # empty header will not be added
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials $cors_credentials always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS, DELETE" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Signature,Account-Id" always;
        if ($request_method = OPTIONS) {
            return 204;
        }

        resolver 127.0.0.11 valid=30s;

        location  / {
            set $upstream horizon;
            proxy_pass http://$upstream;
        }

        location ~* /v3/ {
            set $upstream horizon;
            proxy_pass http://$upstream;
        }

        location ~* /data/enums {
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /kdf {
 
            proxy_pass http://api;
        }
        location ~* /wallets {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /verification {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /accounts {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /blobs {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /documents {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /identities {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /schemas {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /invites {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /invites_multi {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /sessions {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /integrations/multisig {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }
        location ~* /telegram_updates {
 
            set $upstream api;
            proxy_pass http://$upstream;
        }


        location ~* /integrations/coinpayments/deposit {
 
            set $upstream coinpayments-deposit;
            proxy_pass http://$upstream;
        }

        location ~* /charts {
 
            set $upstream charts;
            proxy_pass http://$upstream;
        }

        # location ~* /_/storage/ {
        #     client_max_body_size 32m;
        #     set $upstream storage;
        #     rewrite    /_/storage(.+) $1 break;
        #     rewrite    /_/storage / break;
        #     proxy_set_header Host storage:9000;
        #     proxy_pass http://$upstream:9000;
        # }

        # location ~* /_/ws/ {
        #     set $upstream charts;
        #     proxy_pass http://$upstream:8080;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }
    }
}
